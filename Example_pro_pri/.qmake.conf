isEmpty(QMAKESPEC) : return() # for some reason .qmake.conf is run twice - first before even qmake.conf (located at QMAKESPEC path), and second after qmake.conf
DOTQMAKECONF += $$_FILE_ # meant to be in all .qmake.conf files so it serves as a way to check which .qmake.conf is used

# Определяем переменные нужныме переменные и кастомные функции.
# Т.к. содержимое .qmake.conf доступно во всём проекте, то использовать их можно в любых .pro и .pri файлах.
EXAMPLE_ROOT = $$clean_path($$PWD/..)
EXAMPLE_SRC = $${EXAMPLE_ROOT}/src
EXAMPLE_BIN = $${EXAMPLE_ROOT}/bin
EXAMPLE_LIB = $${EXAMPLE_ROOT}/lib
EXAMPLE_MOC = $${EXAMPLE_ROOT}/moc
EXAMPLE_OBJ = $${EXAMPLE_ROOT}/obj

# arg is full path to .pri # call example: !assureUniquePri($$_FILE_) : return()
defineTest(assureUniquePri) {
    this_pri_file = $$basename(1)
    contains(included_pri_files, $$this_pri_file) : return(false)
    included_pri_files += $$this_pri_file
    export(included_pri_files)
    return(true)
}

# arg is path to .pro # call example: setAllPathes($$PWD)
defineTest(setAllPathes) {
    pwd_path = $$1
    rel_path = $$relative_path($$pwd_path, $$EXAMPLE_SRC)

    equals(pwd_path, $$OUT_PWD) : { # in-source build
        equals(TEMPLATE, "app") : DESTDIR = $${EXAMPLE_BIN}
        else : DESTDIR = $$getLibDestdir($$pwd_path)
        MOC_DIR = $${EXAMPLE_MOC}/moc/$${rel_path}
        OBJECTS_DIR = $${EXAMPLE_OBJ}/obj/$${rel_path}
    } else { # out-of-source build
        equals(TEMPLATE, "app") : DESTDIR = $${EXAMPLE_BIN}
        else : DESTDIR = $${EXAMPLE_LIB}/$${rel_path}
        # shadow build should handle moc and obj paths automatically
    }

    export(DESTDIR)
    export(MOC_DIR)
    export(OBJECTS_DIR)
    return(true)
}

# arg is path to lib # call example: var = getLibDestdir($$PWD)
defineReplace(getLibDestdir) {
    pwd_path = $$1
    rel_path = $$relative_path($$pwd_path, $$EXAMPLE_SRC)
    return($${EXAMPLE_LIB}/$${rel_path})
}
